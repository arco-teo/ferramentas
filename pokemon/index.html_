<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8">
<title>Pokémon PDF Escalable con Orientación</title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<style>
    body {
        font-family: Arial, sans-serif;
        text-align: center;
        margin: 20px;
    }
    #controls {
        margin-bottom: 20px;
    }
    #pokemon-container {
        display: grid;
        grid-template-columns: repeat(3, 150px);
        grid-gap: 20px;
        justify-content: center;
    }
    .pokemon-card {
        position: relative;
        width: 150px;
        height: 150px;
    }
    .pokemon-card img {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }
    .circle-number {
        position: absolute;
        top: 8px;
        right: 8px;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: red;
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        font-size: 16px;
    }
</style>
</head>
<body>
<h1>Pokémon PDF Escalable</h1>
<div id="controls">
    <label for="orientation">Orientación:</label>
    <select id="orientation">
        <option value="portrait">Vertical</option>
        <option value="landscape">Horizontal</option>
    </select>
    <button id="generate">Generar PDF</button>
</div>
<div id="pokemon-container"></div>

<script>
const container = document.getElementById('pokemon-container');
const btn = document.getElementById('generate');
const orientationSelect = document.getElementById('orientation');

async function fetchPokemons() {
    const promises = [];
    const usedIds = new Set();
    while (usedIds.size < 9) {
        const randomId = Math.floor(Math.random() * 898) + 1;
        if (!usedIds.has(randomId)) {
            usedIds.add(randomId);
            promises.push(fetch(`https://pokeapi.co/api/v2/pokemon/${randomId}`).then(res => res.json()));
        }
    }
    return Promise.all(promises);
}

function getUniqueNumbers() {
    const numbers = Array.from({length: 10}, (_, i) => i + 1);
    numbers.sort(() => Math.random() - 0.5);
    return numbers.slice(0, 9);
}

async function init() {
    const pokemons = await fetchPokemons();
    const numbers = getUniqueNumbers();
    container.innerHTML = '';
    
    pokemons.forEach((poke, index) => {
        const div = document.createElement('div');
        div.className = 'pokemon-card';
        div.innerHTML = `
            <img src="${poke.sprites.other['official-artwork'].front_default}" alt="${poke.name}">
            <div class="circle-number">${numbers[index]}</div>
        `;
        container.appendChild(div);
    });

    btn.onclick = () => generatePDF(pokemons, numbers);
}

async function generatePDF(pokemons, numbers) {
    const { jsPDF } = window.jspdf;
    const orientation = orientationSelect.value;
    const pdf = new jsPDF({
        orientation: orientation,
        unit: 'px',
        format: 'a4'
    });

    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();
    const margin = 20;

    const cols = 3;
    const rows = 3;
    const cellWidth = (pageWidth - margin * 2) / cols;
    const cellHeight = (pageHeight - margin * 2) / rows;
/*
    const maxSize = 130; // tamaño máximo para número 1
    const minSize = 90;  // tamaño mínimo para número 10
    const step = (maxSize - minSize) / 9;
*/
const maxSize = 180; // tamaño máximo (número 1)
const minSize = 60;  // tamaño mínimo (número 10)
const step = (maxSize - minSize) / 9; // diferencia proporcional
 


    for (let i = 0; i < pokemons.length; i++) {
        const imgUrl = pokemons[i].sprites.other['official-artwork'].front_default;
        const img = await loadImage(imgUrl);

        const num = numbers[i];
        const size = maxSize - (num - 1) * step;
        const col = i % cols;
        const row = Math.floor(i / cols);

        const cellX = margin + col * cellWidth;
        const cellY = margin + row * cellHeight;

        const x = cellX + (cellWidth - size) / 2;
        const y = cellY + (cellHeight - size) / 2;

        pdf.addImage(img, 'PNG', x, y, size, size);

        // Dibujar círculo con número
        pdf.setFillColor(255, 0, 0);
        pdf.circle(x + size - 18, y + 18, 12, 'F');
        pdf.setTextColor(255, 255, 255);
        pdf.setFontSize(14);
        pdf.text(String(num), x + size - 18, y + 23, { align: 'center' });

        // Agregar nombre del Pokémon en la parte inferior (fuente pequeña)
        pdf.setFontSize(8);
        pdf.setTextColor(0, 0, 0);
        pdf.text(pokemons[i].name.toUpperCase(), x + size / 2, y + size + 10, { align: 'center' });
    }
    
    // ✅ Pie de página centrado
    pdf.setFontSize(8);
    pdf.setTextColor(100);
    pdf.text('diana deseñada por Pablo Belay Fernández (C) - 2025', pageWidth / 2, pageHeight - 10, { align: 'center' });


    pdf.save('pokemons.pdf');
}

function loadImage(url) {
    return new Promise((resolve) => {
        const img = new Image();
        img.crossOrigin = 'Anonymous';
        img.onload = () => {
            const canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            const ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            resolve(canvas.toDataURL('image/png'));
        };
        img.src = url;
    });
}

init();
</script>
</body>
</html>

